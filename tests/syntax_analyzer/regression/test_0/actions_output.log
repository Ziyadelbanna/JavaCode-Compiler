METHOD_BODY -> STATEMENT_LIST
STATEMENT_LIST -> DECLARATION STATEMENT_LIST'
DECLARATION -> int id ;
match: int
match: id
match: ;
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST'
STATEMENT -> ASSIGNMENT
ASSIGNMENT -> id assign EXPRESSION ;
match: id
match: assign
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION'
SIMPLE_EXPRESSION -> FACTOR TERM' SIMPLE_EXPRESSION'
FACTOR -> num
match: num
TERM' -> \L
SIMPLE_EXPRESSION' -> \L
EXPRESSION' -> \L
match: ;
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST'
STATEMENT -> IF
IF -> if ( EXPRESSION ) { STATEMENT } else { STATEMENT }
match: if
match: (
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION'
SIMPLE_EXPRESSION -> FACTOR TERM' SIMPLE_EXPRESSION'
FACTOR -> id
match: id
TERM' -> \L
SIMPLE_EXPRESSION' -> \L
EXPRESSION' -> relop SIMPLE_EXPRESSION
match: relop
SIMPLE_EXPRESSION -> FACTOR TERM' SIMPLE_EXPRESSION'
FACTOR -> num
match: num
TERM' -> \L
SIMPLE_EXPRESSION' -> \L
match: )
match: {
STATEMENT -> ASSIGNMENT
ASSIGNMENT -> id assign EXPRESSION ;
match: id
match: assign
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION'
SIMPLE_EXPRESSION -> FACTOR TERM' SIMPLE_EXPRESSION'
FACTOR -> num
match: num
TERM' -> \L
SIMPLE_EXPRESSION' -> \L
EXPRESSION' -> \L
match: ;
match: }
Error: (missing else) - inserted.
Error: (missing {) - inserted.
SYNCH (pop_stack)
Error: (missing }) - inserted.
STATEMENT_LIST' -> \L
accept
