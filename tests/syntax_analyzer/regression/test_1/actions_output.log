METHOD_BODY -> STATEMENT_LIST
STATEMENT_LIST -> STATEMENT STATEMENT_LIST1
STATEMENT -> DECLARATION
DECLARATION -> PRIMITIVE_TYPE id ;
PRIMITIVE_TYPE -> int
match: int
match: id
match: ;
STATEMENT_LIST1 -> STATEMENT STATEMENT_LIST1
STATEMENT -> ASSIGNMENT
ASSIGNMENT -> id assign EXPRESSION ;
match: id
match: assign
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION1
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION1
TERM -> FACTOR TERM1
FACTOR -> num
match: num
TERM1 -> \L
SIMPLE_EXPRESSION1 -> \L
EXPRESSION1 -> \L
match: ;
STATEMENT_LIST1 -> STATEMENT STATEMENT_LIST1
STATEMENT -> IF
IF -> if ( EXPRESSION ) { STATEMENT } else { STATEMENT }
match: if
match: (
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION1
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION1
TERM -> FACTOR TERM1
FACTOR -> id
match: id
TERM1 -> \L
SIMPLE_EXPRESSION1 -> \L
EXPRESSION1 -> relop SIMPLE_EXPRESSION
match: relop
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION1
TERM -> FACTOR TERM1
FACTOR -> num
match: num
TERM1 -> \L
SIMPLE_EXPRESSION1 -> \L
match: )
match: {
STATEMENT -> ASSIGNMENT
ASSIGNMENT -> id assign EXPRESSION ;
match: id
match: assign
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION1
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION1
TERM -> FACTOR TERM1
FACTOR -> num
match: num
TERM1 -> \L
SIMPLE_EXPRESSION1 -> \L
EXPRESSION1 -> \L
match: ;
match: }
Error: (missing else) - inserted.
Error: (missing {) - inserted.
SYNCH (pop_stack)
Error: (missing }) - inserted.
STATEMENT_LIST1 -> \L
accept
